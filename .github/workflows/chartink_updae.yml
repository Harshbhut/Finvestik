# Name of your GitHub Actions workflow
name: Update Chartink Data

# Controls when the action will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs on a schedule
  schedule:
    # This runs the job every 10 minutes
    - cron: '*/10 * * * *'

jobs:
  # The single job in this workflow, you can name it anything
  update-data:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # You can change this to your preferred Python version

      # Step 3: Install the required Python libraries
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run your Python script
      # Make sure the path to your script is correct
      - name: Run the Chartink data script
        run: python scripts/chartink.py

      # Step 5: Commit the updated data file back to the repository
      - name: Commit and push if there are changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # The commit message
          commit_message: "Automated update of Chartink data"
          
          # The specific file that should be committed.
          # IMPORTANT: Make sure this path is correct from the root of your repo.
          file_pattern: "static/data/Chartink.json"
          
          # The user name and email for the commit
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "actions@github.com"
